{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 Menlo-Italic;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Menlo-Bold;
\f3\fnil\fcharset0 Menlo-BoldItalic;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\i\fs36 \cf0 \ul \ulc0 push_swap
\f1\i0  		        
\f2\b Algorithm/example\

\f1\b0\fs28 \ulnone \
Given two stacks, A, A' and B as follows. 
\f0\i \
\
   \ul stack     content           		length\ulnone \
\

\f1\i0 	
\f3\i\b A
\f0\b0  
\f1\i0        [11,7,3,12,2,5,1] 			  7\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f3\i\b \cf0 	A'
\f1\i0\b0        [1,2,3,5,7,11,12] 			  7\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 	
\f3\i\b B
\f0\b0  
\f1\i0        [(empty)] 					  	  0\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\i \cf0 Visually, both stacks looks like below. stack A' is stack A but sorted using any sort. But I want to implent either 
\f2\i0\b merge sort
\f0\i\b0  or 
\f2\i0\b quick sort
\f0\i\b0 !
\f1\i0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
  
\f2\b HEAD
\f1\b0  ---->	11     [<=    mid_2]    1\
 			 	 7      [mid_1  <]      2\
 			 	 3                      3 <--- 
\f2\b mid_1
\f1\b0 \
				12        ~~~~~~        5\
			 	 2                      7 <--- 
\f2\b mid_2
\f1\b0 \
			 	 5      [min   <=]     11  \
			 	 1     [<=    mid_1]   12\
				---        ---         ---\
			 	 
\f2\b A          B           A'
\f1\b0 \
\
To completely 
\f0\i sort
\f1\i0  stack A, we have the following push_swap operations:\
\
  1. 
\f2\b ra pb
\f1\b0  		// push 7 to head_b\
  2. 
\f2\b pb sb
\f1\b0  		// push 3 to tail_b\
  3. 
\f2\b ra pb rb		
\f1\b0 // push 2 to tail_b\
  4. 
\f2\b pb pb rb
\f1\b0  	// push 5,1 to head_b, tail_b \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
										5\
										7\
										~\
										3\
				11						2\
				12       				1\
				---      	         ---\
			 	 
\f2\b A                  B
\f1\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
  5. 
\f2\b sb pa pa
\f1\b0  	// swap 5 and 7. push to head_a\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 				 5\
				 7						3\
				11						2\
				12       				1\
				---      	         ---\
			 	 
\f2\b A                  B
\f1\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
  6. 
\f2\b pa pa pa
\f1\b0  	// push 3, 2 and 1 to head_a\
 \
Of a total of 
\f2\b 16
\f1\b0  operations. However, I'm not sure they're totally optimal\
}